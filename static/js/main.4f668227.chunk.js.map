{"version":3,"sources":["components/AppNavbar.js","actions/types.js","components/UserList.js","actions/userActions.js","tasks/form-task/FormTaskComplete/form-api.js","tasks/form-task/FormTask.js","reducers/userReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["AppNavbar","Navbar","color","dark","expand","className","Container","NavbarBrand","href","GET_USERS","DELETE_USER","ADD_USER","UsersList","onDeleteClick","id","props","deleteUser","this","getUsers","users","user","ListGroup","TransitionGroup","map","name","surname","birthday","CSSTransition","timeout","classNames","ListGroupItem","Button","size","onClick","bind","Component","connect","state","type","payload","saveUserForm","Promise","f","setTimeout","then","console","log","FormTask","userType","inactivityDate","error","onChange","e","setState","target","value","onSubmit","preventDefault","match","prevState","Object","assign","currentDate","Date","currentDay","getDate","currentMonth","getMonth","currentYear","getFullYear","userYear","slice","userYearNumber","parseInt","userMonth","userMonthNumber","userDay","userDayNumber","newUser","uuid","inactivity","addUser","Form","FormGroup","style","marginTop","display","justifyContent","Label","for","Input","placeholder","selected","disabled","block","initialState","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"iNAqBeA,EAdG,WACV,OACA,8BACI,cAACC,EAAA,EAAD,CAAQC,MAAM,UAAUC,MAAI,EAACC,OAAO,KAAKC,UAAU,OAAnD,SACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAaC,KAAK,IAAlB,yC,wECZPC,EAAY,YACZC,EAAc,cACdC,EAAW,WCalBC,E,4MAMFC,cAAgB,SAAAC,GACZ,EAAKC,MAAMC,WAAWF,I,kEAJtBG,KAAKF,MAAMG,a,+BAON,IAAD,OACGC,EAASF,KAAKF,MAAMK,KAApBD,MACP,OACI,cAACb,EAAA,EAAD,UACI,cAACe,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAiBjB,UAAU,gBAA3B,SACKc,EAAMI,KAAI,gBAAET,EAAF,EAAEA,GAAGU,EAAL,EAAKA,KAAKC,EAAV,EAAUA,QAAQC,EAAlB,EAAkBA,SAAlB,OACP,cAACC,EAAA,EAAD,CAAwBC,QAAS,IAAKC,WAAW,OAAjD,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACI1B,UAAU,aACVH,MAAM,SACN8B,KAAK,KACLC,QAAS,EAAKpB,cAAcqB,KAAK,EAAMpB,GAJ3C,kBAQA,4CATJ,IASwBU,EATxB,IAS8B,2CAT9B,IASiDC,EATjD,IAS0D,0CAT1D,IAS4EC,MAV5DZ,gB,GAjBxBqB,aA+CTC,eAJS,SAACC,GAAD,MAAY,CAChCjB,KAAMiB,EAAMjB,QAGwB,CAACF,SC5DjB,WACpB,MAAO,CACHoB,KAAM7B,ID0DqCO,WCtDzB,SAAAF,GACtB,MAAO,CACHwB,KAAM5B,EACN6B,QAASzB,KDmDFsB,CAAiDxB,G,yDE9DnD4B,EAAe,kBACxB,IAAIC,SAAQ,SAACC,GACTC,WAAWD,EAAG,QAEjBE,MAAK,WACFC,QAAQC,IAAI,qBCUdC,E,4MAEFV,MAAQ,CACJb,KAAM,GACNC,QAAS,GACTC,SAAU,GACVsB,SAAU,GACVC,eAAgB,GAChBC,MAAO,CACH1B,KAAM,GACNC,QAAS,GACTC,SAAU,GACVuB,eAAgB,K,EAIxBE,SAAW,SAACC,GACR,EAAKC,SAAL,eAAgBD,EAAEE,OAAO9B,KAAO4B,EAAEE,OAAOC,S,EAG7CC,SAAW,SAACJ,GAqDR,GApDAA,EAAEK,iBAIG,EAAKpB,MAAMb,KAAKkC,MAAM,kBAOvB,EAAKL,UAAS,SAAAM,GACV,IAAIT,EAAQU,OAAOC,OAAO,GAAIF,EAAUT,OAExC,OADAA,EAAM1B,KAAO,GACN,CAAE0B,YATb,EAAKG,UAAS,SAAAM,GACV,IAAIT,EAAQU,OAAOC,OAAO,GAAIF,EAAUT,OAExC,OADAA,EAAM1B,KAAO,2BACN,CAAE0B,YAYZ,EAAKb,MAAMZ,QAAQiC,MAAM,kBAO1B,EAAKL,UAAS,SAAAM,GACV,IAAIT,EAAQU,OAAOC,OAAO,GAAIF,EAAUT,OAExC,OADAA,EAAMzB,QAAU,GACT,CAAEyB,YATb,EAAKG,UAAS,SAAAM,GACV,IAAIT,EAAQU,OAAOC,OAAO,GAAIF,EAAUT,OAExC,OADAA,EAAMzB,QAAU,2BACT,CAAEyB,YAYZ,EAAKb,MAAMX,SAASgC,MAAM,uBAO3B,EAAKL,UAAS,SAAAM,GACV,IAAIT,EAAQU,OAAOC,OAAO,GAAIF,EAAUT,OAExC,OADAA,EAAMxB,SAAW,GACV,CAAEwB,YATb,EAAKG,UAAS,SAAAM,GACV,IAAIT,EAAQU,OAAOC,OAAO,GAAIF,EAAUT,OAExC,OADAA,EAAMxB,SAAW,2CACV,CAAEwB,YAYW,WAAxB,EAAKb,MAAMW,SAAuB,CAElC,IAAIc,EAAc,IAAIC,KAClBC,EAAaF,EAAYG,UACzBC,EAAeJ,EAAYK,WAAa,EACxCC,EAAcN,EAAYO,cAE1BC,EAAW,EAAKjC,MAAMY,eAAesB,MAAM,EAAG,GAC9CC,EAAiBC,SAASH,GAE1BI,EAAY,EAAKrC,MAAMY,eAAesB,MAAM,EAAG,GAC/CI,EAAkBF,SAASC,GAE3BE,EAAU,EAAKvC,MAAMY,eAAesB,MAAM,EAAG,IAC7CM,EAAgBJ,SAASG,GAEzBJ,GAAkBJ,EAClB,EAAKf,UAAS,SAAAM,GACV,IAAIT,EAAQU,OAAOC,OAAO,GAAIF,EAAUT,OAExC,OADAA,EAAMD,eAAiB,GAChB,CAAEC,YAGb,EAAKG,UAAS,SAAAM,GACV,IAAIT,EAAQU,OAAOC,OAAO,GAAIF,EAAUT,OAExC,OADAA,EAAMD,eAAiB,+CAChB,CAAEC,YAIbyB,GAAmBT,GAAgBM,GAAkBJ,EACrD,EAAKf,UAAS,SAAAM,GACV,IAAIT,EAAQU,OAAOC,OAAO,GAAIF,EAAUT,OAExC,OADAA,EAAMD,eAAiB,GAChB,CAAEC,YAENyB,GAAmB,IAAMH,EAAiBJ,EACjD,EAAKf,UAAS,SAAAM,GACV,IAAIT,EAAQU,OAAOC,OAAO,GAAIF,EAAUT,OAExC,OADAA,EAAMD,eAAiB,GAChB,CAAEC,YAGb,EAAKG,UAAS,SAAAM,GACV,IAAIT,EAAQU,OAAOC,OAAO,GAAIF,EAAUT,OAExC,OADAA,EAAMD,eAAiB,+CAChB,CAAEC,YAIb2B,GAAiBb,GAAcW,GAAmBT,GAAgBM,GAAkBJ,EACpF,EAAKf,UAAS,SAAAM,GACV,IAAIT,EAAQU,OAAOC,OAAO,GAAIF,EAAUT,OAExC,OADAA,EAAMD,eAAiB,GAChB,CAAEC,YAEN2B,GAAiB,IAAMF,GAAmB,IAAMH,EAAiBJ,EACxE,EAAKf,UAAS,SAAAM,GACV,IAAIT,EAAQU,OAAOC,OAAO,GAAIF,EAAUT,OAExC,OADAA,EAAMD,eAAiB,GAChB,CAAEC,YAEN2B,GAAiB,IAAMF,EAAkBT,GAAgBM,GAAkBJ,EAClF,EAAKf,UAAS,SAAAM,GACV,IAAIT,EAAQU,OAAOC,OAAO,GAAIF,EAAUT,OAExC,OADAA,EAAMD,eAAiB,GAChB,CAAEC,YAGb,EAAKG,UAAS,SAAAM,GACV,IAAIT,EAAQU,OAAOC,OAAO,GAAIF,EAAUT,OAExC,OADAA,EAAMD,eAAiB,+CAChB,CAAEC,YAKrB,IAAM4B,EAAU,CACZhE,GAAIiE,MACJvD,KAAM,EAAKa,MAAMb,KACjBC,QAAS,EAAKY,MAAMZ,QACpBC,SAAU,EAAKW,MAAMX,SACrBN,KAAM,EAAKiB,MAAMW,SACjBgC,WAAY,EAAK3C,MAAMY,gBAGN,KAAlB,EAAKZ,MAAMb,MAAgC,KAArB,EAAKa,MAAMZ,UAChC,EAAKV,MAAMkE,QAAQH,GACnBtC,M,uDAKJ,OACI,8BACI,cAAC0C,EAAA,EAAD,CAAM1B,SAAUvC,KAAKuC,SAArB,SACI,eAAC2B,EAAA,EAAD,CAAWC,MAAO,CAAEC,UAAW,QAA/B,UACI,oBAAID,MAAO,CAAEE,QAAS,OAAQC,eAAgB,UAA9C,2BACA,cAACC,EAAA,EAAD,CAAOC,IAAI,OAAX,yBACA,cAACC,EAAA,EAAD,CACIpD,KAAK,OACLd,KAAK,OACLV,GAAG,OACH6E,YAAY,WACZxC,SAAUlC,KAAKkC,WAEO,IAAzBlC,KAAKoB,MAAMa,MAAM1B,KAAa,gCAAK,uBAAO4D,MAAO,CAAElF,MAAO,OAAvB,SAAiCe,KAAKoB,MAAMa,MAAM1B,OAAa,0BAAe,KAClH,cAACgE,EAAA,EAAD,CAAOC,IAAI,OAAX,wBACA,cAACC,EAAA,EAAD,CACIpD,KAAK,OACLd,KAAK,UACLV,GAAG,UACH6E,YAAY,cACZxC,SAAUlC,KAAKkC,WAEU,IAA5BlC,KAAKoB,MAAMa,MAAMzB,QAAgB,gCAAK,uBAAO2D,MAAO,CAAElF,MAAO,OAAvB,SAAiCe,KAAKoB,MAAMa,MAAMzB,UAAgB,0BAAe,KACxH,cAAC+D,EAAA,EAAD,CAAOC,IAAI,OAAX,uBACA,cAACC,EAAA,EAAD,CACIpD,KAAK,OACLd,KAAK,WACLV,GAAG,WACH6E,YAAY,aACZxC,SAAUlC,KAAKkC,WAEW,IAA7BlC,KAAKoB,MAAMa,MAAMxB,SAAiB,gCAAK,uBAAO0D,MAAO,CAAElF,MAAO,OAAvB,SAAiCe,KAAKoB,MAAMa,MAAMxB,WAAiB,0BAAe,KAC1H,oBAAI0D,MAAO,CAAEE,QAAS,OAAQC,eAAgB,UAA9C,6BACA,cAACC,EAAA,EAAD,CAAOC,IAAI,OAAX,wBACA,eAACC,EAAA,EAAD,CAAOpD,KAAK,SAASd,KAAK,WAAWV,GAAG,WAAWqC,SAAUlC,KAAKkC,SAAlE,UACI,wBAAQI,MAAM,GAAGqC,UAAQ,EAAzB,gCACA,wBAAQrC,MAAM,SAAd,oBACA,wBAAQA,MAAM,WAAd,yBAEJ,cAACiC,EAAA,EAAD,CAAOC,IAAI,OAAX,mCACA,cAACC,EAAA,EAAD,CACIpD,KAAK,OACLd,KAAK,iBACLV,GAAG,iBACH+E,SAAiC,YAAvB5E,KAAKoB,MAAMW,SACrB2C,YAAY,aACZxC,SAAUlC,KAAKkC,WAEiB,IAAnClC,KAAKoB,MAAMa,MAAMD,gBAA+C,UAAvBhC,KAAKoB,MAAMW,SAAuB,gCAAK,uBAAOoC,MAAO,CAAElF,MAAO,OAAvB,SAAiCe,KAAKoB,MAAMa,MAAMD,iBAAuB,0BAAe,KACzK,cAAClB,EAAA,EAAD,CACI7B,MAAM,UACNC,MAAI,EACJiF,MAAO,CAAEC,UAAW,QACpBS,OAAK,EAJT,6B,GAvND3D,aA0ORC,eAJS,SAAAC,GAAK,MAAK,CAC9BjB,KAAMiB,EAAMjB,QAGwB,CAAE6D,QF1OnB,SAAA7D,GACnB,MAAO,CACHkB,KAAM3B,EACN4B,QAASnB,KEuOFgB,CAAsCW,G,gCCtP/CgD,EAAe,CACjB5E,MAAO,CACH,CAACL,GAAIiE,MAAOvD,KAAM,cAAUC,QAAS,QAASC,SAAU,gBCFjDsE,cAAgB,CAC3B5E,KDKW,WAAqC,IAA5BiB,EAA2B,uDAArB0D,EAAcE,EAAO,uCAC/C,OAAOA,EAAO3D,MACV,KAAK7B,EACD,OAAO,eACA4B,GAEX,KAAK3B,EACD,OAAO,2BACA2B,GADP,IAEIlB,MAAOkB,EAAMlB,MAAM+E,QAAO,SAAA9E,GAAI,OAAEA,EAAKN,KAAKmF,EAAO1D,aAEzD,KAAK5B,EACD,OAAO,2BACA0B,GADP,IAEIlB,MAAM,CAAE8E,EAAO1D,SAAV,mBAAsBF,EAAMlB,UAEzC,QACI,OAAOkB,MEpBb8D,EAAa,CAACC,KAOLC,EALDC,YAAYC,EAJL,GAIgCC,YACjDC,IAAe,WAAf,EAAmBN,GACnBO,OAAOC,8BAAgCD,OAAOC,iCCcnCC,EAZH,WACR,OACI,eAAC,IAAD,CAAUP,MAAOA,EAAjB,UACI,cAAC,EAAD,IACA,eAAC/F,EAAA,EAAD,WACI,cAAC,EAAD,IACA,cAAC,EAAD,WCNIuG,QACW,cAA7BH,OAAOI,SAASC,UAEe,UAA7BL,OAAOI,SAASC,UAEhBL,OAAOI,SAASC,SAASrD,MACvB,2DCbNsD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3E,MAAK,SAAA4E,GACJA,EAAaC,gBAEdC,OAAM,SAAAxE,GACLL,QAAQK,MAAMA,EAAMyE,c","file":"static/js/main.4f668227.chunk.js","sourcesContent":["import React from 'react';\r\nimport{\r\n    Navbar,\r\n    NavbarBrand,\r\n    Container\r\n} from 'reactstrap';\r\n\r\nconst AppNavbar = () => {\r\n        return(\r\n        <div>\r\n            <Navbar color=\"primary\" dark expand=\"sm\" className=\"mb-5\">\r\n                <Container>\r\n                    <NavbarBrand href=\"/\">\r\n                        SONALAKE - USER FORM\r\n                    </NavbarBrand>\r\n                </Container>\r\n            </Navbar>\r\n        </div>\r\n        );\r\n}\r\n\r\nexport default AppNavbar;","export const GET_USERS = 'GET_USERS';\r\nexport const DELETE_USER = 'DELETE_USER'; \r\nexport const ADD_USER = 'ADD_USER'; ","import React, {Component} from 'react';\r\nimport {\r\n    Container, \r\n    ListGroup, \r\n    ListGroupItem, \r\n    Button\r\n} from 'reactstrap';\r\nimport {\r\n    CSSTransition, \r\n    TransitionGroup\r\n} from 'react-transition-group';\r\nimport {connect} from 'react-redux';\r\nimport {getUsers, deleteUser} from '../actions/userActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass UsersList extends Component{\r\n\r\n    componentDidMount(){\r\n        this.props.getUsers();\r\n    }\r\n\r\n    onDeleteClick = id => {\r\n        this.props.deleteUser(id)\r\n    }\r\n\r\n    render(){\r\n        const {users} = this.props.user;\r\n        return(\r\n            <Container>\r\n                <ListGroup>\r\n                    <TransitionGroup className=\"shopping-list\">\r\n                        {users.map(({id,name,surname,birthday})=>(\r\n                            <CSSTransition key={id} timeout={500} classNames=\"fade\">\r\n                                <ListGroupItem>\r\n                                    <Button \r\n                                        className=\"remove-btn\" \r\n                                        color=\"danger\" \r\n                                        size=\"sm\" \r\n                                        onClick={this.onDeleteClick.bind(this, id)}\r\n                                    > \r\n                                        &times;\r\n                                    </Button>\r\n                                    <b>First name:</b> {name} <b>Last name:</b> {surname} <b>Birthday:</b> {birthday} \r\n                                </ListGroupItem>\r\n                            </CSSTransition>\r\n                        ))}\r\n                    </TransitionGroup>\r\n                </ListGroup>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nUsersList.propTypes = {\r\n    getUsers: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps, {getUsers, deleteUser})(UsersList);","import {GET_USERS,DELETE_USER,ADD_USER} from './types';\r\n\r\nexport const getUsers = () => {\r\n    return {\r\n        type: GET_USERS\r\n    }\r\n}   \r\n\r\nexport const deleteUser = id => {\r\n    return {\r\n        type: DELETE_USER,\r\n        payload: id\r\n    }\r\n}  \r\n\r\nexport const addUser = user => {\r\n    return {\r\n        type: ADD_USER,\r\n        payload: user\r\n    }\r\n}","export const saveUserForm = () =>\n    new Promise((f) => {\n        setTimeout(f, 1000);\n    })\n    .then(() => {\n        console.log('Form is saved');\n    });","import React, { Component } from 'react';\n\nimport {\n    Button,\n    Form,\n    FormGroup,\n    Label,\n    Input\n} from 'reactstrap';\nimport uuid from 'uuid/dist/v1';\nimport { connect } from 'react-redux'\n\nimport { addUser } from '../../actions/userActions';\nimport {saveUserForm} from './FormTaskComplete/form-api';\n\nclass FormTask extends Component {\n\n    state = {\n        name: '',\n        surname: '',\n        birthday: '',\n        userType: '',\n        inactivityDate: '',\n        error: {\n            name: '',\n            surname: '',\n            birthday: '',\n            inactivityDate: ''\n        }\n    }\n\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n\n        //Validation name - mandatory\n\n        if (!this.state.name.match(/[a-zA-Z0-9-,]+/)) {\n            this.setState(prevState => {\n                let error = Object.assign({}, prevState.error);\n                error.name = 'This field is mandatory.';\n                return { error };\n            })\n        } else {\n            this.setState(prevState => {\n                let error = Object.assign({}, prevState.error);\n                error.name = '';\n                return { error };\n            })\n        }\n\n        //Validation surname - mandatory\n\n        if (!this.state.surname.match(/[a-zA-Z0-9-,]+/)) {\n            this.setState(prevState => {\n                let error = Object.assign({}, prevState.error);\n                error.surname = 'This field is mandatory.';\n                return { error };\n            })\n        } else {\n            this.setState(prevState => {\n                let error = Object.assign({}, prevState.error);\n                error.surname = '';\n                return { error };\n            })\n        }\n\n        //Validation - date format\n\n        if (!this.state.birthday.match(/^\\d{4}-\\d{2}-\\d{2}$/)) {\n            this.setState(prevState => {\n                let error = Object.assign({}, prevState.error);\n                error.birthday = 'This field accepts the format YYYY-MM-DD';\n                return { error };\n            })\n        } else {\n            this.setState(prevState => {\n                let error = Object.assign({}, prevState.error);\n                error.birthday = '';\n                return { error };\n            })\n        }\n\n        //Validation - date time\n\n        if (this.state.userType === 'Active') {\n\n            let currentDate = new Date();\n            let currentDay = currentDate.getDate();\n            let currentMonth = currentDate.getMonth() + 1;\n            let currentYear = currentDate.getFullYear();\n\n            let userYear = this.state.inactivityDate.slice(0, 4)\n            let userYearNumber = parseInt(userYear)\n\n            let userMonth = this.state.inactivityDate.slice(5, 7)\n            let userMonthNumber = parseInt(userMonth)\n\n            let userDay = this.state.inactivityDate.slice(8, 10)\n            let userDayNumber = parseInt(userDay)\n\n            if (userYearNumber <= currentYear) {\n                this.setState(prevState => {\n                    let error = Object.assign({}, prevState.error);\n                    error.inactivityDate = '';\n                    return { error };\n                })\n            } else {\n                this.setState(prevState => {\n                    let error = Object.assign({}, prevState.error);\n                    error.inactivityDate = 'Must be completed with a date from the past.';\n                    return { error };\n                })\n            }\n\n            if (userMonthNumber <= currentMonth && userYearNumber == currentYear) {\n                this.setState(prevState => {\n                    let error = Object.assign({}, prevState.error);\n                    error.inactivityDate = '';\n                    return { error };\n                })\n            } else if (userMonthNumber <= 12 && userYearNumber < currentYear) {\n                this.setState(prevState => {\n                    let error = Object.assign({}, prevState.error);\n                    error.inactivityDate = '';\n                    return { error };\n                })\n            } else {\n                this.setState(prevState => {\n                    let error = Object.assign({}, prevState.error);\n                    error.inactivityDate = 'Must be completed with a date from the past.';\n                    return { error };\n                })\n            }\n\n            if (userDayNumber <= currentDay && userMonthNumber <= currentMonth && userYearNumber == currentYear) {\n                this.setState(prevState => {\n                    let error = Object.assign({}, prevState.error);\n                    error.inactivityDate = '';\n                    return { error };\n                })\n            } else if (userDayNumber <= 31 && userMonthNumber <= 12 && userYearNumber < currentYear) {\n                this.setState(prevState => {\n                    let error = Object.assign({}, prevState.error);\n                    error.inactivityDate = '';\n                    return { error };\n                })\n            } else if (userDayNumber <= 31 && userMonthNumber < currentMonth && userYearNumber == currentYear) {\n                this.setState(prevState => {\n                    let error = Object.assign({}, prevState.error);\n                    error.inactivityDate = '';\n                    return { error };\n                })\n            } else {\n                this.setState(prevState => {\n                    let error = Object.assign({}, prevState.error);\n                    error.inactivityDate = 'Must be completed with a date from the past.';\n                    return { error };\n                })\n            }\n        }\n\n        const newUser = {\n            id: uuid(),\n            name: this.state.name,\n            surname: this.state.surname,\n            birthday: this.state.birthday,\n            user: this.state.userType,\n            inactivity: this.state.inactivityDate\n        }\n\n        if(this.state.name!==''&&this.state.surname!==''){\n            this.props.addUser(newUser);\n            saveUserForm();\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Form onSubmit={this.onSubmit}>\n                    <FormGroup style={{ marginTop: '2rem' }}>\n                        <h2 style={{ display: 'flex', justifyContent: 'center' }}>Personal Info</h2>\n                        <Label for=\"name\">First Name:</Label>\n                        <Input\n                            type=\"text\"\n                            name=\"name\"\n                            id=\"name\"\n                            placeholder=\"Add name\"\n                            onChange={this.onChange}\n                        />\n                        {this.state.error.name != '' ? <div><small style={{ color: 'red' }}>{this.state.error.name}</small><br /></div> : null}\n                        <Label for=\"name\">Last Name:</Label>\n                        <Input\n                            type=\"text\"\n                            name=\"surname\"\n                            id=\"surname\"\n                            placeholder=\"Add surname\"\n                            onChange={this.onChange}\n                        />\n                        {this.state.error.surname != '' ? <div><small style={{ color: 'red' }}>{this.state.error.surname}</small><br /></div> : null}\n                        <Label for=\"name\">Birthday:</Label>\n                        <Input\n                            type=\"text\"\n                            name=\"birthday\"\n                            id=\"birthday\"\n                            placeholder=\"YYYY-MM-DD\"\n                            onChange={this.onChange}\n                        />\n                        {this.state.error.birthday != '' ? <div><small style={{ color: 'red' }}>{this.state.error.birthday}</small><br /></div> : null}\n                        <h2 style={{ display: 'flex', justifyContent: 'center' }}>User Management</h2>\n                        <Label for=\"name\">User Type:</Label>\n                        <Input type=\"select\" name='userType' id='userType' onChange={this.onChange}>\n                            <option value=\"\" selected>Choose your option</option>\n                            <option value=\"Active\">Active</option>\n                            <option value=\"Inactive\">Inactive</option>\n                        </Input>\n                        <Label for=\"name\">User Inactivity Date:</Label>\n                        <Input\n                            type=\"text\"\n                            name=\"inactivityDate\"\n                            id=\"inactivityDate\"\n                            disabled={this.state.userType == 'Inactive' ? true : false}\n                            placeholder=\"YYYY-MM-DD\"\n                            onChange={this.onChange}\n                        />\n                        {this.state.error.inactivityDate != '' && this.state.userType == 'Active' ? <div><small style={{ color: 'red' }}>{this.state.error.inactivityDate}</small><br /></div> : null}\n                        <Button\n                            color=\"primary\"\n                            dark\n                            style={{ marginTop: '2rem' }}\n                            block\n                        >\n                            Send\n                        </Button>\n                    </FormGroup>\n                </Form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    user: state.user\n});\n\nexport default connect(mapStateToProps, { addUser })(FormTask);","import uuid from 'uuid/dist/v1';\r\nimport {GET_USERS,DELETE_USER,ADD_USER} from '../actions/types'; \r\n \r\nconst initialState = {\r\n    users: [\r\n        {id: uuid(),name: 'Michał', surname: 'Kozak', birthday: '1989-05-18'}\r\n    ]\r\n}\r\n\r\nexport default function(state=initialState, action){\r\n    switch(action.type){\r\n        case GET_USERS:\r\n            return {\r\n                ...state\r\n            };\r\n        case DELETE_USER:\r\n            return {\r\n                ...state,\r\n                users: state.users.filter(user=>user.id!==action.payload)\r\n            };\r\n        case ADD_USER:\r\n            return {\r\n                ...state,\r\n                users: [action.payload, ...state.users]\r\n            }\r\n        default:\r\n            return state\r\n    };\r\n};  ","import {combineReducers} from 'redux';\r\nimport userReducer from './userReducer';\r\n\r\nexport default combineReducers({\r\n    user: userReducer\r\n})  ","import {createStore,applyMiddleware,compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n));\r\n\r\nexport default store;","import React from 'react';\n\nimport {Provider} from 'react-redux';\nimport {Container} from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport AppNavbar from './components/AppNavbar';\nimport UsersList from './components/UserList';\n\nimport FormTask from './tasks/form-task/FormTask';\nimport store from './store';\n\nconst App = () => {\n    return (\n        <Provider store={store}>\n            <AppNavbar/>\n            <Container>\n                <UsersList/>\n                <FormTask />\n            </Container>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}