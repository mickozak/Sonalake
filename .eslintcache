[{"D:\\react-gh-pages\\src\\App.js":"1","D:\\react-gh-pages\\src\\tasks\\form-task\\FormTaskComplete\\FormTaskComplete.js":"2","D:\\react-gh-pages\\src\\tasks\\form-task\\FormTask.js":"3","D:\\react-gh-pages\\src\\tasks\\form-task\\FormTaskComplete\\index.js":"4","D:\\react-gh-pages\\src\\actions\\types.js":"5","D:\\react-gh-pages\\src\\components\\AppNavbar.js":"6","D:\\react-gh-pages\\src\\components\\UserList.js":"7","D:\\react-gh-pages\\src\\actions\\userActions.js":"8"},{"size":577,"mtime":1606163037008,"results":"9","hashOfConfig":"10"},{"size":93,"mtime":1600340290000,"results":"11","hashOfConfig":"10"},{"size":9612,"mtime":1606163259146,"results":"12","hashOfConfig":"10"},{"size":55,"mtime":1600340290000,"results":"13","hashOfConfig":"10"},{"size":119,"mtime":1606161683480,"results":"14","hashOfConfig":"10"},{"size":504,"mtime":1606163443405,"results":"15","hashOfConfig":"10"},{"size":1998,"mtime":1606162546204,"results":"16","hashOfConfig":"10"},{"size":362,"mtime":1606161643720,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b3ooel",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\react-gh-pages\\src\\App.js",[],"D:\\react-gh-pages\\src\\tasks\\form-task\\FormTaskComplete\\FormTaskComplete.js",[],"D:\\react-gh-pages\\src\\tasks\\form-task\\FormTask.js",["35","36","37","38","39","40","41","42","43"],"import React, { Component } from 'react';\n\nimport {\n    Button,\n    Form,\n    FormGroup,\n    Label,\n    Input\n} from 'reactstrap';\nimport uuid from 'uuid/dist/v1';\nimport { connect } from 'react-redux'\n\nimport { addUser } from '../../actions/userActions';\nimport {saveUserForm} from './FormTaskComplete/form-api';\n\nclass FormTask extends Component {\n\n    state = {\n        name: '',\n        surname: '',\n        birthday: '',\n        userType: '',\n        inactivityDate: '',\n        error: {\n            name: '',\n            surname: '',\n            birthday: '',\n            inactivityDate: ''\n        }\n    }\n\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n\n        //Validation name - mandatory\n\n        if (!this.state.name.match(/[a-zA-Z0-9-,]+/)) {\n            this.setState(prevState => {\n                let error = Object.assign({}, prevState.error);\n                error.name = 'This field is mandatory.';\n                return { error };\n            })\n        } else {\n            this.setState(prevState => {\n                let error = Object.assign({}, prevState.error);\n                error.name = '';\n                return { error };\n            })\n        }\n\n        //Validation surname - mandatory\n\n        if (!this.state.surname.match(/[a-zA-Z0-9-,]+/)) {\n            this.setState(prevState => {\n                let error = Object.assign({}, prevState.error);\n                error.surname = 'This field is mandatory.';\n                return { error };\n            })\n        } else {\n            this.setState(prevState => {\n                let error = Object.assign({}, prevState.error);\n                error.surname = '';\n                return { error };\n            })\n        }\n\n        //Validation - date format\n\n        if (!this.state.birthday.match(/^\\d{4}-\\d{2}-\\d{2}$/)) {\n            this.setState(prevState => {\n                let error = Object.assign({}, prevState.error);\n                error.birthday = 'This field accepts the format YYYY-MM-DD';\n                return { error };\n            })\n        } else {\n            this.setState(prevState => {\n                let error = Object.assign({}, prevState.error);\n                error.birthday = '';\n                return { error };\n            })\n        }\n\n        //Validation - date time\n\n        if (this.state.userType === 'Active') {\n\n            let currentDate = new Date();\n            let currentDay = currentDate.getDate();\n            let currentMonth = currentDate.getMonth() + 1;\n            let currentYear = currentDate.getFullYear();\n\n            let userYear = this.state.inactivityDate.slice(0, 4)\n            let userYearNumber = parseInt(userYear)\n\n            let userMonth = this.state.inactivityDate.slice(5, 7)\n            let userMonthNumber = parseInt(userMonth)\n\n            let userDay = this.state.inactivityDate.slice(8, 10)\n            let userDayNumber = parseInt(userDay)\n\n            if (userYearNumber <= currentYear) {\n                this.setState(prevState => {\n                    let error = Object.assign({}, prevState.error);\n                    error.inactivityDate = '';\n                    return { error };\n                })\n            } else {\n                this.setState(prevState => {\n                    let error = Object.assign({}, prevState.error);\n                    error.inactivityDate = 'Must be completed with a date from the past.';\n                    return { error };\n                })\n            }\n\n            if (userMonthNumber <= currentMonth && userYearNumber == currentYear) {\n                this.setState(prevState => {\n                    let error = Object.assign({}, prevState.error);\n                    error.inactivityDate = '';\n                    return { error };\n                })\n            } else if (userMonthNumber <= 12 && userYearNumber < currentYear) {\n                this.setState(prevState => {\n                    let error = Object.assign({}, prevState.error);\n                    error.inactivityDate = '';\n                    return { error };\n                })\n            } else {\n                this.setState(prevState => {\n                    let error = Object.assign({}, prevState.error);\n                    error.inactivityDate = 'Must be completed with a date from the past.';\n                    return { error };\n                })\n            }\n\n            if (userDayNumber <= currentDay && userMonthNumber <= currentMonth && userYearNumber == currentYear) {\n                this.setState(prevState => {\n                    let error = Object.assign({}, prevState.error);\n                    error.inactivityDate = '';\n                    return { error };\n                })\n            } else if (userDayNumber <= 31 && userMonthNumber <= 12 && userYearNumber < currentYear) {\n                this.setState(prevState => {\n                    let error = Object.assign({}, prevState.error);\n                    error.inactivityDate = '';\n                    return { error };\n                })\n            } else if (userDayNumber <= 31 && userMonthNumber < currentMonth && userYearNumber == currentYear) {\n                this.setState(prevState => {\n                    let error = Object.assign({}, prevState.error);\n                    error.inactivityDate = '';\n                    return { error };\n                })\n            } else {\n                this.setState(prevState => {\n                    let error = Object.assign({}, prevState.error);\n                    error.inactivityDate = 'Must be completed with a date from the past.';\n                    return { error };\n                })\n            }\n        }\n\n        const newUser = {\n            id: uuid(),\n            name: this.state.name,\n            surname: this.state.surname,\n            birthday: this.state.birthday,\n            user: this.state.userType,\n            inactivity: this.state.inactivityDate\n        }\n\n        if(this.state.name!==''&&this.state.surname!==''){\n            this.props.addUser(newUser);\n            saveUserForm();\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Form onSubmit={this.onSubmit}>\n                    <FormGroup style={{ marginTop: '2rem' }}>\n                        <h2 style={{ display: 'flex', justifyContent: 'center' }}>Personal Info</h2>\n                        <Label for=\"name\">First Name:</Label>\n                        <Input\n                            type=\"text\"\n                            name=\"name\"\n                            id=\"name\"\n                            placeholder=\"Add name\"\n                            onChange={this.onChange}\n                        />\n                        {this.state.error.name != '' ? <div><small style={{ color: 'red' }}>{this.state.error.name}</small><br /></div> : null}\n                        <Label for=\"name\">Last Name:</Label>\n                        <Input\n                            type=\"text\"\n                            name=\"surname\"\n                            id=\"surname\"\n                            placeholder=\"Add surname\"\n                            onChange={this.onChange}\n                        />\n                        {this.state.error.surname != '' ? <div><small style={{ color: 'red' }}>{this.state.error.surname}</small><br /></div> : null}\n                        <Label for=\"name\">Birthday:</Label>\n                        <Input\n                            type=\"text\"\n                            name=\"birthday\"\n                            id=\"birthday\"\n                            placeholder=\"YYYY-MM-DD\"\n                            onChange={this.onChange}\n                        />\n                        {this.state.error.birthday != '' ? <div><small style={{ color: 'red' }}>{this.state.error.birthday}</small><br /></div> : null}\n                        <h2 style={{ display: 'flex', justifyContent: 'center' }}>User Management</h2>\n                        <Label for=\"name\">User Type:</Label>\n                        <Input type=\"select\" name='userType' id='userType' onChange={this.onChange}>\n                            <option value=\"\" selected>Choose your option</option>\n                            <option value=\"Active\">Active</option>\n                            <option value=\"Inactive\">Inactive</option>\n                        </Input>\n                        <Label for=\"name\">User Inactivity Date:</Label>\n                        <Input\n                            type=\"text\"\n                            name=\"inactivityDate\"\n                            id=\"inactivityDate\"\n                            disabled={this.state.userType == 'Inactive' ? true : false}\n                            placeholder=\"YYYY-MM-DD\"\n                            onChange={this.onChange}\n                        />\n                        {this.state.error.inactivityDate != '' && this.state.userType == 'Active' ? <div><small style={{ color: 'red' }}>{this.state.error.inactivityDate}</small><br /></div> : null}\n                        <Button\n                            color=\"primary\"\n                            dark\n                            style={{ marginTop: '2rem' }}\n                            block\n                        >\n                            Send\n                        </Button>\n                    </FormGroup>\n                </Form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    user: state.user\n});\n\nexport default connect(mapStateToProps, { addUser })(FormTask);","D:\\react-gh-pages\\src\\tasks\\form-task\\FormTaskComplete\\index.js",[],"D:\\react-gh-pages\\src\\actions\\types.js",[],"D:\\react-gh-pages\\src\\components\\AppNavbar.js",[],"D:\\react-gh-pages\\src\\components\\UserList.js",[],"D:\\react-gh-pages\\src\\actions\\userActions.js",[],{"ruleId":"44","severity":1,"message":"45","line":119,"column":67,"nodeType":"46","messageId":"47","endLine":119,"endColumn":69},{"ruleId":"44","severity":1,"message":"45","line":139,"column":98,"nodeType":"46","messageId":"47","endLine":139,"endColumn":100},{"ruleId":"44","severity":1,"message":"45","line":151,"column":96,"nodeType":"46","messageId":"47","endLine":151,"endColumn":98},{"ruleId":"44","severity":1,"message":"48","line":195,"column":48,"nodeType":"46","messageId":"47","endLine":195,"endColumn":50},{"ruleId":"44","severity":1,"message":"48","line":204,"column":51,"nodeType":"46","messageId":"47","endLine":204,"endColumn":53},{"ruleId":"44","severity":1,"message":"48","line":213,"column":52,"nodeType":"46","messageId":"47","endLine":213,"endColumn":54},{"ruleId":"44","severity":1,"message":"45","line":226,"column":59,"nodeType":"46","messageId":"47","endLine":226,"endColumn":61},{"ruleId":"44","severity":1,"message":"48","line":230,"column":58,"nodeType":"46","messageId":"47","endLine":230,"endColumn":60},{"ruleId":"44","severity":1,"message":"45","line":230,"column":87,"nodeType":"46","messageId":"47","endLine":230,"endColumn":89},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='."]